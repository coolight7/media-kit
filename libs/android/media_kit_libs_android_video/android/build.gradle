import java.io.File
import java.nio.file.Files
import java.security.MessageDigest

group 'com.alexmercerind.media_kit_libs_android_video'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    // Conditional for compatibility with AGP <4.2.
    if (project.android.hasProperty("namespace")) {
        namespace 'com.alexmercerind.media_kit_libs_android_video'
    }

    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 21
    }

    dependencies {
        implementation fileTree(dir: "$buildDir/output", include: "*.jar")
    }
}

task downloadDependencies(type: Exec) {

    // Delete previously created /output subdirectory.

    def outputDir = file("$buildDir/output")
    if (outputDir.exists()) {
        outputDir.deleteDir()
    }
    
    // Download all *.jar dependencies & verify their MD5 checksums.

    def destDefaultARM64 = file("../outlibs/encoders-gpl-arm64-v8a.jar")
    def destDefaultARMEABI = file("../outlibs/encoders-gpl-armeabi-v7a.jar")
    def destDefaultX86_64 = file("../outlibs/encoders-gpl-x86_64.jar")
    def destDefaultX86 = file("../outlibs/encoders-gpl-x86.jar")

    copy {
        from destDefaultARM64
        into "$buildDir/output"
    }
    copy {
        from destDefaultARMEABI
        into "$buildDir/output"
    }
    copy {
        from destDefaultX86_64
        into "$buildDir/output"
    }
    copy {
        from destDefaultX86
        into "$buildDir/output"
    }
}

assemble.dependsOn(downloadDependencies)